// ==================================================================================================================
// 1. FUNCTIONAL COMPONENT
import { h } from 'vue';
export default function () {
    return h('button', {}, 'Button')
}
// ==================================================================================================================
// 2. DEFINE ASYNC COMPONENT
const AsyncComponent = defineAsyncComponet(() => import('./components/Component.vue'));
const AsyncComponent1 = defineAsyncComponent({
    loader: () => new Promise((resolve, reject) => {
        setTimeout(() => {
            if(loadWithError.value) {
                reject("Error")
            } else {
                resolve(import('./UserProfile.vue'))
            }
        }, 2000)
    }),
    loadingComponent: Loader,
    errorComponent: Error
})
// ==================================================================================================================
// 3. COMPUTED
const doubleCount = computed(()=>{
    return count.value * 2;
})

const doubleCount1 = computed({
    get : () => {
        return count.value * 2;
    },
    set : (val) => {
        count.value = val / 2;
    }
})
// ==================================================================================================================
// 4. WATCH
watch(source, (newVal, oldVal) => {
    console.log(newVal);
}, { deep: true, immediate : true })
watch([source1, source2], ([newVal1, newVal2], [oldVal1, oldVal2]) =>{
    console.log(newVal1, newVal2);
})
watchEffect(()=>{
    console.log(reactiveData);
})
watchPostEffect(()=>{
    console.log(reactiveData);
})
// ==================================================================================================================
// 5. V-MODEL ON COMPONENT
//Parent
`<Child v-model="title"></Child>`
// Child
`<input :value="title" @input="onChange"/>`
defineProps({
    modelValue: { type: String }
})
const emit = defineEmits(['update:modelValue'])
const onChange = (value) => {
    emit('update:modelValue', value)
}
// ==================================================================================================================
// 6. FALLTHROUGH ATTRIBUTES BINDING
<div v-bind="$attrs"></div>
// For not binding
defineOptions({
    inheritAttrs : false
})
// ==================================================================================================================
// 7. SLOTS
// Parent
`<Child>
    <template #header>
        <h1>Heading</h1>
    </template>

    <template #body="{ message}">
        <p>{{ message }}</p>
    </template>
</Child>`
// Child
`<div>
    <slot name="header"></slot>
    <slot name="body" :message="message"></slot>
</div>`
// ==================================================================================================================
// 8. PROVIDE / INJECT
// Parent
import { provide, ref } from 'vue';
const title = ref("Hello Vue")
provide('title', title.value)
// Child
import { inject } from 'vue';
const titleVal = inject('title');
// ==================================================================================================================
// 9. COMPOSABLES
export function useFetch(...args) {
    // ...
    // return {...}
}
import { useFetch } from './composables/useFetch';
const {...} = useFetch(...)
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
// ==================================================================================================================
